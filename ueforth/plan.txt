POSSIBLE PLAN
-------------

* Support many platform variants
  - Linux & Windows
    * Expose dlsym / LoadLibrary/GetAddress, build from there
    * Load Forth bootstraping from command line and well known locations
      - exe relative boot.fs
      - exe relative linux.fs
      - provide facility to find exe relative, provide more libraries:
        * x11 / GDI
        * simplified graphics
        * console / ide
    * Build distributable zip w/ main exe, boot files
      - Maybe installer too?
  - ESP32/8266
    * Expose key features via built-in words:
      - Wi-Fi
      - BLE
      - GPIO
      - Raw Flash
      - FAT
      - SPI
      - Clock and Timers
    * Load Core bootstrap from embedded code
    * Load User program from internal flash, followed by external
    * Multiple Build Configurations:
      - Single .ino file for Arduino install (generated from c source)
      - ESP-SDK built raw hex & FAT image
  - Web
    * Expose CALL opcode taking and returning sp, call item from an array.
      - Prepopulate array with method to eval and store into same array.
    * Load js relative Forth bootstrapping:
      - js relative boot.fs
      - js relative web.fs:
        * canvas graphics
        * simplified graphics
        * DOM interaction
        * console / ide
    * Build distributable js, boot files
* Publish built downloadables to gh-pages
* Support cross built by providing built binaries with others.
